#jinja2: trim_blocks:False
resource "nginx_server_block" "{{ resource_name }}" {
  filename = "{{ resource_name }}.conf"
  enable = true

  markers = {
    docker_ports = [
      {%- for nginx_expose in containerapp__expose if nginx_expose.external_port != 443 %}
      {%- if nginx_expose is defined and nginx_expose.service is defined %}
      docker_container.stackhead-{{ project_name }}-{{ nginx_expose.service }}.ports[{{ loop.index0 }}].external{% if not loop.last %},{% endif %}
      {%- endif %}
      {%- endfor %}
    ]

  }

  content = <<EOF
{% for nginx_expose in containerapp__expose if nginx_expose.external_port != 443 %}
{% if nginx_expose.external_port == 80 %}
{{ lookup('template', "{{ playbook_dir }}/../templates/nginx/serverblock.http.j2", template_vars=dict(ansible_loop=loop)) }}
{{ lookup('template', "{{ playbook_dir }}/../templates/nginx/serverblock.container-reverseproxy.j2", template_vars=dict(ansible_loop=loop,base="https")) }}
{% else %}
{{ lookup('template', "{{ playbook_dir }}/../templates/nginx/serverblock.container-reverseproxy.j2", template_vars=dict(ansible_loop=loop,port=nginx_expose.external_port,base="http")) }}
{% endif %}
{% endfor %}
EOF

{%- if nginx_expose is defined and nginx_expose.service is defined %}
  depends_on = [
{% for nginx_expose in containerapp__expose if nginx_expose.external_port != 443 %}
{% if not loop.first %},{% endif %}docker_container.stackhead-{{ project_name }}-{{ nginx_expose.service }}
{% endfor %}
  ]
{%- endif %}

  provisioner "local-exec" {
    command = "sudo systemctl reload nginx"
  }
}