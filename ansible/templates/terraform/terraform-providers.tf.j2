#jinja2: trim_blocks:False
terraform {
  required_providers {
    acme = {
      source  = "getstackhead/acme"
      version = "1.5.0-patched"
    }
    tls = {
      source  = "hashicorp/tls"
      version = "2.2.0"
    }
    local = {
      source  = "hashicorp/local"
      version = "1.4.0"
    }
  {%- for provider in loaded_terraform_providers|default([]) %}
    {{ provider.name }}{%- if provider.nameSuffix is defined %}-{{ provider.nameSuffix }}{%- endif %} = {
      source = "{{ provider.vendor }}/{{ provider.name }}"
      version = "{{ provider.version }}"
    }
  {%- endfor %}
  }
}

{% for provider in loaded_terraform_providers|default([]) %}
{%- if 'init' in provider %}
{{ lookup('template', provider.init) }}
{%- else %}
provider "{{ provider.name }}{%- if provider.nameSuffix is defined %}-{{ provider.nameSuffix }}{%- endif %}" {
}
{%- endif %}
{% endfor %}

provider "acme" {
  server_url = "{% if lookup('env','TEST') == '1' %}https://acme-staging-v02.api.letsencrypt.org/directory{% else %}https://acme-v02.api.letsencrypt.org/directory{% endif %}"
}

provider "tls" {
  version = "2.2.0"
}

resource "tls_private_key" "stackhead" {
  algorithm   = "ECDSA"
  ecdsa_curve = "P384"
}

resource "tls_self_signed_cert" "stackhead" {
  key_algorithm   = tls_private_key.stackhead.algorithm
  private_key_pem = tls_private_key.stackhead.private_key_pem

  subject {
    common_name  = "stackhead.local"
    organization = "StackHead"
  }

  # expire after 100 years
  validity_period_hours = 876000

  allowed_uses = []
}

resource "local_file" "stackhead_snakeoil_chain" {
  sensitive_content = tls_self_signed_cert.stackhead.cert_pem
  filename          = "{{ stackhead__snakeoil_fullchain }}"
}

resource "local_file" "stackhead_snakeoil_key" {
  sensitive_content = tls_private_key.stackhead.private_key_pem
  filename          = "{{ stackhead__snakeoil_privkey }}"
}
