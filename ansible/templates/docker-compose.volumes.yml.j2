#jinja2: trim_blocks:False
version: '2.4'
{%- for service in dockerapp__services if (service.volumes is defined or service.volumes_from is defined) %}
{%- if loop.first %}
services:
{%- endif %}
  {{ service.name }}:
    {%- if service.volumes is defined %}
    volumes:
    {%- for volume in service.volumes %}
      {%- if volume.type == "custom" %}
      - {{ volume.src }}:{{ volume.dest }}{% if volume.mode is defined %}:{{ volume.mode }}{% endif %}
      {%- else %}
      {%- set sanitizedSrc = volume.src | regex_replace('[^\w]', '_') %}
      - {{ volume.type }}{% if volume.type == "local" %}-{{ service.name }}{% endif %}-{{ sanitizedSrc }}:{{ volume.dest }}{% if volume.mode is defined %}:{{ volume.mode }}{% endif %}
      {%- endif %}
    {%- endfor %}
    {%- endif %}
    {%- if service.volumes_from is defined %}
    volumes_from:
      {%- for service in service.volumes_from %}
      - {{ service }}
      {%- endfor %}
    {%- endif %}
{%- endfor %}

{%- set globalVolumeKeys = [] %}
{%- for service in dockerapp__services if service.volumes is defined %}
{%- if loop.first %}
volumes:
{%- endif %}
  {%- for volume in service.volumes %}
  {%- set src = volume.src|default('') %}
  {%- set sanitizedSrc = src | regex_replace('[^\w]', '_') %}
  {%- if volume.type == "local" %}
  local-{{ service.name }}-{{ sanitizedSrc }}:
    driver_opts:
        type: none
        device: {{ dockerapp__data_location_services|format(service.name, src) }}
        o: bind
  {%- elif volume.type == "global" and sanitizedSrc not in globalVolumeKeys %}
  global-{{ sanitizedSrc }}:
    driver_opts:
        type: none
        device: {{ dockerapp__data_location_global|format(src) }}
        o: bind
  {%- set _ = globalVolumeKeys.append( sanitizedSrc ) %}
  {%- endif %}
  {%- endfor %}
{%- endfor %}