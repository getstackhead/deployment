---
- hosts: localhost
  connection: local
  tasks:
    - name: Generate nginx vhost Terraform file
      template:
        src: "../templates/terraform/nginx_server_block.tf.j2"
        dest: "./nginx_vhost.tf"
        force: true
      vars:
        stackhead__acme_folder: ""
        stackhead__certificates_folder: ""
        nginx_vhost_content: "{{ lookup('template', nginx_vhost_template) }}"
        nginx_project_name: test
        resource_name: "{{ nginx_project_name }}"
        app_config:
          domain: example.com
        nginx_htpasswd_path: /etc/nginx/passwd
        nginx_vhost_template: "{{ playbook_dir }}/../templates/nginx-vhost.reverse-proxy.j2"
        nginx_basicauth_title: "Restricted area"
        nginx_auth_basic:
          - type: basic
            username: user1
            password: pass1
        nginx_vhost:
          server_name: "example.com"
          use_https: 1
          proxy_pass_port: "123"
          state: present
          filename: "example_com.conf"
    - name: "Test SSL Terraform file generation"
      template:
        src: "../templates/terraform/ssl-certificate.tf.j2"
        dest: "./ssl-certificate.tf"
      vars:
        app_config:
          domain: example.com
        domain_alternative: ["test.example.com", "test2.example.com"]
        stackhead__acme_folder: ""
        stackhead__certificates_folder: ""
        stackhead__tf_project_folder: "/stackhead-root/projects/test/terraform"
    - name: "Test Docker Terraform file generation"
      template:
        src: "../templates/terraform/docker.tf.j2"
        dest: "./docker.tf"
      vars:
        containerapp__project_name: test
        containerapp__registries:
          - username: dockerhub-user
            password: dockerhub-pass
          - username: myregistry-user
            password: myregistry-pass
            url: myregistry.com
        containerapp__data_location_global: "/docker/global/%s"
        containerapp__data_location_services: "/docker/services/%s/%s"
        containerapp__expose:
          service: nginx
          port: 80
        containerapp__services:
          - name: data
            image: mycontainer:latest
          - name: nginx
            image: getstackhead/nginx:php
            environment:
              NGINX_PUBLIC_DIRECTORY: public
            links:
              - php
            volumes:
              - type: global
                src: data
                dest: /var/www/public/data
                mode: ro
              - type: global
                src: uploads
                dest: /var/www/public/uploads
                mode: ro
            volumes_from:
              - data:ro
          - name: php
            image: getstackhead/php:7.2
            links:
              - db
            volumes_from:
              - data
            volumes:
              - type: global
                src: fileadmin
                dest: /var/www/public/fileadmin
              - type: global
                src: uploads
                dest: /var/www/public/uploads
              - type: global
                src: typo3temp
                dest: /var/www/public/typo3temp
              - type: global
                src: var
                dest: /var/www/var
          - name: db
            image: mariadb
            environment:
              MYSQL_ROOT_PASSWORD: db
              MYSQL_DATABASE: db
              MYSQL_USER: db
              MYSQL_PASSWORD: db
            volumes:
              - type: local
                src: data
                dest: /var/lib/mysql